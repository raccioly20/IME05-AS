{
  "hash": "c845560d671862286220006e4074e150",
  "result": {
    "markdown": "---\ntitle: \"Análise de Sobrevivência\"\nsubtitle: \"Modelos Paramétricos\"\nauthor: \"Ricardo Accioly\"\nformat:\n  revealjs:\n    theme: league \n    slide-number: true\n    chalkboard: \n      buttons: false\n    preview-links: auto\n    css: styles.css\n---\n\n\n## Modelos Paramétricos\n\nNesta apresentação vamos ver passo a passo como obter a função taxa de falhas e de sobrevivência para alguns modelos de probabilidade.\n\nAqui vamos utilizar as funções existentes no pacote `stats` que vem com a instalação padrão do R.\n\n\n## Modelos Paramétricos - Exponencial\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexpHaz <- function(x, rate) { \n  dexp(x, rate=rate)/\n    pexp(x, rate=rate, lower.tail=F)\n}\ncurve(expHaz(x, rate=0.5), from=0, to=50,\n      ylab=\"h(t)\", xlab=\"Tempo\", \n      col=\"red\", ylim=c(0,1))\ncurve(expHaz(x, rate=0.3), from=0, to=50, \n      ylab=\"h(t)\", xlab=\"Tempo\",\n      col=\"blue\", add = T)\ncurve(expHaz(x, rate=0.1), from=0, to=50,\n      ylab=\"h(t)\", xlab=\"Tempo\", \n      col=\"black\", add=T)\nlegend(\"topright\", \n       legend = c(expression(paste(alfa, \" = \", 2)),\n                  expression(paste(alfa, \" = \", 3)),\n                  expression(paste(alfa, \" = \", 10))),\n                   lty=1, col = c(\"red\",\"blue\",\"black\"))\n```\n\n::: {.cell-output-display}\n![](Aula03_files/figure-revealjs/unnamed-chunk-1-1.png){width=960}\n:::\n:::\n\n\n\n## Taxa de Falhas - Exponencial\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Aula03_files/figure-revealjs/unnamed-chunk-2-1.png){width=960}\n:::\n:::\n\n\n\n## Modelos Paramétricos - Exponencial\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexpSurv <- function(x, rate) { \n  pexp(x, rate=rate, lower.tail=F)\n}\ncurve(expSurv(x, rate=0.5), from=0, to=50,\n      ylab=\"S(t)\", xlab=\"Tempo\", col=\"red\")\ncurve(expSurv(x, rate=0.3), from=0, to=50,\n      ylab=\"S(t)\", xlab=\"Tempo\", col=\"blue\", add=T)\ncurve(expSurv(x, rate=0.1), from=0, to=50,\n      ylab=\"S(t)\", xlab=\"Tempo\", col=\"black\", add=T)\nlegend(\"topright\", \n       legend = c(expression(paste(alfa, \" = \", 2)),\n                  expression(paste(alfa, \" = \", 3)),\n                  expression(paste(alfa, \" = \", 10))),\n       lty=1, col = c(\"red\",\"blue\",\"black\"))\n```\n\n::: {.cell-output-display}\n![](Aula03_files/figure-revealjs/unnamed-chunk-3-1.png){width=960}\n:::\n:::\n\n\n## Curva de Sobrevivência - Exponencial\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Aula03_files/figure-revealjs/unnamed-chunk-4-1.png){width=960}\n:::\n:::\n\n\n\n## Modelos Paramétricos - Weibull\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweibHaz <- function(x, shape, scale) { \n  dweibull(x, shape=shape, scale=scale)/\n  pweibull(x, shape=shape, scale=scale,\n           lower.tail=F)\n}\ncurve(weibHaz(x, shape=1.5, scale=1), \n      from=0, to=2,\n      ylab=\"h(t)\", xlab=\"Tempo\", col=\"red\")\ncurve(weibHaz(x, shape=1, scale=1), \n      from=0, to=2, \n      ylab=\"h(t)\", xlab=\"Tempo\", col=\"blue\", \n      add = T)\ncurve(weibHaz(x, shape=0.75, scale=1), \n      from=0, to=2,\n      ylab=\"h(t)\", xlab=\"Tempo\", col=\"black\", \n      add=T)\nlegend(\"topright\", \n   legend = c(expression(paste(beta, \" = \", 1.5,\" \",\n                                   alfa, \" = \", 1)),\n              expression(paste(beta, \" = \", 1,\" \",\n                                    alfa, \" = \", 1)),\n              expression(paste(beta, \" = \", 0.75,\" \",\n                                    alfa, \" = \", 1))),\n       lty=1, col = c(\"red\",\"blue\",\"black\"))\n```\n\n::: {.cell-output-display}\n![](Aula03_files/figure-revealjs/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n\n\n## Taxa de Falhas - Weibull\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Aula03_files/figure-revealjs/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n\n\n\n## Modelos Paramétricos - Weibull\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweibSurv <- function(x, shape, scale) {\n  pweibull(x, shape=shape, scale=scale,\n           lower.tail=F)\n}\ncurve(weibSurv(x, shape=1.5, scale=1), from=0, to=2,\n      ylab=\"S(t)\", xlab=\"Tempo\", col=\"red\")\ncurve(weibSurv(x, shape=1, scale=1), from=0, to=2,\n      ylab=\"S(t)\", xlab=\"Tempo\", col=\"blue\", add=T)\ncurve(weibSurv(x, shape=0.75, scale=1), from=0, to=2,\n      ylab=\"S(t)\", xlab=\"Tempo\", col=\"black\", add=T)\nlegend(\"topright\", \n       legend = c(expression(paste(beta, \" = \", 1.5,\" \",\n                                       alfa, \" = \", 1)),                                    expression(paste(beta, \" = \", 1,\" \",\n                                       alfa, \" = \", 1)),\n         expression(paste(beta, \" = \", 0.75,\" \",\n                                      alfa, \" = \", 1))),\n       lty=1, col = c(\"red\",\"blue\",\"black\"))\n```\n\n::: {.cell-output-display}\n![](Aula03_files/figure-revealjs/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\n\n## Curva de Sobrevivência - Weibull\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Aula03_files/figure-revealjs/unnamed-chunk-8-1.png){width=960}\n:::\n:::\n\n\n\n## Modelos Paramétricos - Lognormal\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlogHaz <- function(x, meanlog, sdlog) {\n  dlnorm(x, meanlog=meanlog, sdlog=sdlog)/\n  plnorm(x, meanlog=meanlog, sdlog=sdlog, \n         lower.tail=F)\n}\ncurve(logHaz(x, meanlog=0, sdlog=0.5), from=0, to=log(80),\n      ylab=\"h(t)\", xlab=\"log(Tempo)\", \n      col=\"red\", ylim=c(0,3.0))\ncurve(logHaz(x, meanlog=1, sdlog=0.7), from=0, to=log(80),\n      ylab=\"h(t)\", xlab=\"Log(Tempo)\", \n      col=\"blue\", add=T)\ncurve(logHaz(x, meanlog=1, sdlog=1.0), from=0, to=log(80),\n      ylab=\"h(t)\", xlab=\"Log(Tempo)\", \n      col=\"black\", add=T)\nlegend(\"topright\", c(\"lnorm(0,0.5)\", \"lnorm(1,0.7)\", \n                     \"lnorm(1,1)\"), lty=1, \n       col = c(\"red\",\"blue\",\"black\"))\n```\n\n::: {.cell-output-display}\n![](Aula03_files/figure-revealjs/unnamed-chunk-9-1.png){width=960}\n:::\n:::\n\n\n\n## Taxa de Falhas - Lognormal\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Aula03_files/figure-revealjs/unnamed-chunk-10-1.png){width=960}\n:::\n:::\n\n\n\n## Modelos Paramétricos - Lognormal\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlogSurv <- function(x, meanlog, sdlog) {\n  plnorm(x, meanlog=meanlog, sdlog=sdlog, \n         lower.tail=F)\n}\ncurve(logSurv(x, meanlog=0, sdlog=0.5), \n      from=0, to=log(80),\n      ylab=\"S(t)\", xlab=\"Log(Tempo)\",\n      col=\"red\")\ncurve(logSurv(x, meanlog=1, sdlog=0.7), \n      from=0, to=log(80),\n      ylab=\"S(t)\", xlab=\"Log(Tempo)\", \n      col=\"blue\", add=T)\ncurve(logSurv(x, meanlog=1, sdlog=1.0),\n      from=0, to=log(80),\n      ylab=\"S(t)\", xlab=\"Log(Tempo)\",\n      col=\"black\", add=T)\nlegend(\"topright\", c(\"lnorm(0,0.5)\", \n                     \"lnorm(1,0.7)\", \n                     \"lnorm(1,1)\"),\n       lty=1, col = c(\"red\",\"blue\",\"black\"))\n```\n\n::: {.cell-output-display}\n![](Aula03_files/figure-revealjs/unnamed-chunk-11-1.png){width=960}\n:::\n:::\n\n\n\n## Curva de Sobrevivência - Lognormal\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Aula03_files/figure-revealjs/unnamed-chunk-12-1.png){width=960}\n:::\n:::\n\n\n\n## Modelos Paramétricos - Loglogistico\n\n\n::: {.cell}\n\n```{.r .cell-code}\nllogisHaz <- function(x, alfa, beta) {\n  haz <- beta/alfa*(x/alfa)^(beta-1)/(1+(x/alfa)^beta)  \n}\ncurve(llogisHaz(x, alfa=1, beta=0.5), from=0, to=log(80),\n      ylab=\"h(t)\", xlab=\"Log(Tempo)\", col=\"red\")\ncurve(llogisHaz(x, alfa=1., beta=1), from=0, to=log(80),\n      ylab=\"h(t)\", xlab=\"Log(Tempo)\", col=\"blue\", add=T)\ncurve(llogisHaz(x, alfa=1., beta=3), from=0, to=log(80),\n      ylab=\"h(t)\", xlab=\"Log(Tempo)\", col=\"black\", add=T)\nlegend(\"topright\", c(\"llogis(1, 0.5)\", \"llogis(1,1)\",\n                     \"llogis(1,3)\"),\n       lty=1, col = c(\"red\",\"blue\",\"black\"))\n```\n\n::: {.cell-output-display}\n![](Aula03_files/figure-revealjs/unnamed-chunk-13-1.png){width=960}\n:::\n:::\n\n\n\n## Taxa de Falhas - Loglogistico\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Aula03_files/figure-revealjs/unnamed-chunk-14-1.png){width=960}\n:::\n:::\n\n\n## Modelos Paramétricos - Loglogistico\n\n\n::: {.cell}\n\n```{.r .cell-code}\nllogisSurv <- function(x, alfa, beta) {\n          surv <- 1/(1+(x/alfa)^beta)  \n}\ncurve(llogisSurv(x, alfa=1, beta=0.5), \n      from=0, to=log(80),\n      ylab=\"S(t)\", xlab=\"Log(Tempo)\", \n      col=\"red\", ylim=c(0,1))\ncurve(llogisSurv(x, alfa=1, beta=1), \n      from=0, to=log(80),\n      ylab=\"S(t)\", xlab=\"Log(Tempo)\", \n      col=\"blue\", add=T)\ncurve(llogisSurv(x, alfa=1, beta=3), \n      from=0, to=log(80),\n      ylab=\"S(t)\", xlab=\"Log(Tempo)\", \n      col=\"black\", add=T)\nlegend(\"topright\", c(\"llogis(1, 0.5)\", \n                     \"llogis(1,1)\", \n                     \"llogis(1,3)\"),\n       lty=1, col = c(\"red\",\"blue\",\"black\"))\n```\n\n::: {.cell-output-display}\n![](Aula03_files/figure-revealjs/unnamed-chunk-15-1.png){width=960}\n:::\n:::\n\n\n\n## Curva de Sobrevivência - Loglogistico\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Aula03_files/figure-revealjs/unnamed-chunk-16-1.png){width=960}\n:::\n:::\n",
    "supporting": [
      "Aula03_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
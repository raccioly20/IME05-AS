{
  "hash": "e79f810aab3b044a74d77356e3b98b58",
  "result": {
    "markdown": "---\ntitle: \"Análise de Sobrevivência\"\nsubtitle: \"Modelos SemiParamétrico de Cox\"\nauthor: \"Ricardo Accioly\"\nformat:\n  revealjs:\n    theme: dark\n    slide-number: true\n    chalkboard: \n      buttons: false\n    preview-links: auto\n    css: styles.css\n---\n\n\n## Modelo SemiParamétrico de Cox {.smaller .scrollable}\n\nVamos usar neste exemplo dados da biblioteca survival.\n\nOs dados são de sobrevivência de pacientes com cancer de pulmão em estágio avançado do North Central Cancer Treatment Group.\n\n-   inst: Institution code (Código da instituição)\n-   time: Survival time in days (Tempo de sobrevivência em dias)\n-   status: censoring status 1=censored (censurado), 2=dead (morto)\n-   age: Age in years (Idade em anos)\n-   sex: Male=1 Female=2 (1=Homem, 2 = Mulher)\n-   ph.ecog: ECOG performance score as rated by the physician. 0=asymptomatic, 1= symptomatic but completely ambulatory, 2= in bed \\<50% of the day, 3= in bed \\> 50% of the day but not bedbound, 4 = bedbound\n-   ph.karno: Karnofsky performance score (bad=0-good=100) rated by physician\n-   pat.karno: Karnofsky performance score as rated by patient\n-   meal.cal: Calories consumed at meals\n-   wt.loss: Weight loss in last six months (pounds)\n\n## Carregando Dados\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(survival)\ndados <- lung\nsummary(dados)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      inst            time            status           age       \n Min.   : 1.00   Min.   :   5.0   Min.   :1.000   Min.   :39.00  \n 1st Qu.: 3.00   1st Qu.: 166.8   1st Qu.:1.000   1st Qu.:56.00  \n Median :11.00   Median : 255.5   Median :2.000   Median :63.00  \n Mean   :11.09   Mean   : 305.2   Mean   :1.724   Mean   :62.45  \n 3rd Qu.:16.00   3rd Qu.: 396.5   3rd Qu.:2.000   3rd Qu.:69.00  \n Max.   :33.00   Max.   :1022.0   Max.   :2.000   Max.   :82.00  \n NA's   :1                                                       \n      sex           ph.ecog          ph.karno        pat.karno     \n Min.   :1.000   Min.   :0.0000   Min.   : 50.00   Min.   : 30.00  \n 1st Qu.:1.000   1st Qu.:0.0000   1st Qu.: 75.00   1st Qu.: 70.00  \n Median :1.000   Median :1.0000   Median : 80.00   Median : 80.00  \n Mean   :1.395   Mean   :0.9515   Mean   : 81.94   Mean   : 79.96  \n 3rd Qu.:2.000   3rd Qu.:1.0000   3rd Qu.: 90.00   3rd Qu.: 90.00  \n Max.   :2.000   Max.   :3.0000   Max.   :100.00   Max.   :100.00  \n                 NA's   :1        NA's   :1        NA's   :3       \n    meal.cal         wt.loss       \n Min.   :  96.0   Min.   :-24.000  \n 1st Qu.: 635.0   1st Qu.:  0.000  \n Median : 975.0   Median :  7.000  \n Mean   : 928.8   Mean   :  9.832  \n 3rd Qu.:1150.0   3rd Qu.: 15.750  \n Max.   :2600.0   Max.   : 68.000  \n NA's   :47       NA's   :14       \n```\n:::\n:::\n\n\n## Casos completos\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(complete.cases(lung))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 167\n```\n:::\n:::\n\n\n## Dados Idênticos\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndados1 <- na.omit(dados)\n# ties=c(\"efron\",\"breslow\",\"exact\")\najuste1 <- coxph(Surv(time,status==2) ~ sex + ph.ecog + ph.karno , \n                 ties= \"efron\", \n                 data=dados1)\najuste2 <- coxph(Surv(time,status==2) ~ sex + ph.ecog + ph.karno , \n                 ties= \"breslow\", \n                 data=dados1)\najuste3 <- coxph(Surv(time,status==2) ~ sex + ph.ecog + ph.karno , \n                 ties= \"exact\", \n                 data=dados1)\n```\n:::\n\n\nExistem três formas de lidar com dados idênticos\n\n## Dados idênticos\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndif_met <- rbind(coef(ajuste1), coef(ajuste2), coef(ajuste3))\nrow.names(dif_met) <- c(\"Efron\", \"Breslow\", \"Exact\")\nknitr::kable(dif_met)\n```\n\n::: {.cell-output-display}\n|        |        sex|   ph.ecog|  ph.karno|\n|:-------|----------:|---------:|---------:|\n|Efron   | -0.5314194| 0.7491673| 0.0177764|\n|Breslow | -0.5306768| 0.7487334| 0.0177595|\n|Exact   | -0.5316889| 0.7502275| 0.0177955|\n:::\n:::\n\n\n## Usando o stepAIC\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(MASS)\najuste4 <- coxph(Surv(time,status==2) ~ age + sex + ph.ecog + ph.karno + pat.karno + meal.cal + wt.loss, ties= \"efron\", data=dados1)\najust4_AIC <- stepAIC(ajuste4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nStart:  AIC=1002.07\nSurv(time, status == 2) ~ age + sex + ph.ecog + ph.karno + pat.karno + \n    meal.cal + wt.loss\n\n            Df    AIC\n- meal.cal   1 1000.1\n- age        1 1001.0\n<none>         1002.1\n- pat.karno  1 1002.3\n- wt.loss    1 1003.6\n- ph.karno   1 1004.3\n- sex        1 1008.0\n- ph.ecog    1 1011.1\n\nStep:  AIC=1000.08\nSurv(time, status == 2) ~ age + sex + ph.ecog + ph.karno + pat.karno + \n    wt.loss\n\n            Df     AIC\n- age        1  998.95\n<none>         1000.08\n- pat.karno  1 1000.29\n- wt.loss    1 1001.60\n- ph.karno   1 1002.28\n- sex        1 1006.29\n- ph.ecog    1 1009.09\n\nStep:  AIC=998.95\nSurv(time, status == 2) ~ sex + ph.ecog + ph.karno + pat.karno + \n    wt.loss\n\n            Df     AIC\n<none>          998.95\n- pat.karno  1  999.34\n- ph.karno   1 1000.53\n- wt.loss    1 1000.74\n- sex        1 1005.25\n- ph.ecog    1 1007.83\n```\n:::\n:::\n\n\n## Usando o stepAIC\n\n\n::: {.cell}\n\n```{.r .cell-code}\najust4_AIC <- stepAIC(ajuste4, trace=FALSE)\najust4_AIC\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCall:\ncoxph(formula = Surv(time, status == 2) ~ sex + ph.ecog + ph.karno + \n    pat.karno + wt.loss, data = dados1, ties = \"efron\")\n\n               coef exp(coef)  se(coef)      z       p\nsex       -0.558190  0.572244  0.199202 -2.802 0.00508\nph.ecog    0.742983  2.102197  0.227604  3.264 0.00110\nph.karno   0.020366  1.020575  0.011080  1.838 0.06604\npat.karno -0.012401  0.987675  0.007978 -1.554 0.12008\nwt.loss   -0.014494  0.985611  0.007693 -1.884 0.05957\n\nLikelihood ratio test=27.28  on 5 df, p=5.028e-05\nn= 167, number of events= 120 \n```\n:::\n:::\n\n\nNesta caso usamos trace=FALSE e com isso resultados parciais não são mostrados\n\n## Ajuste de modelos encaixados\n\n\n::: {.cell}\n\n```{.r .cell-code}\najuste4a <- coxph(Surv(time,status==2) ~ sex + ph.ecog + ph.karno + pat.karno + wt.loss, ties= \"efron\", data=dados1)\najuste4b <- coxph(Surv(time,status==2) ~ sex + ph.ecog + ph.karno + wt.loss, ties= \"efron\", data=dados1)\n```\n:::\n\n\n## Teste da Razão de Verossimilhança\n\n\n::: {.cell}\n\n```{.r .cell-code}\nTRV <- 2*(logLik(ajuste4a) - logLik(ajuste4b))\n1 - pchisq(TRV[1],1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.1224475\n```\n:::\n:::\n\n\nAo nível de significância de 0,10 poderíamos usar o modelo mais simples sem o pat.karno\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
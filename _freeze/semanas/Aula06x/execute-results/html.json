{
  "hash": "d914845b0e922bf8a6b894a6cbcfe351",
  "result": {
    "markdown": "---\ntitle: \"Análise de Sobrevivência\"\nsubtitle: \"Modelos Paramétricos TFA (AFT)\"\nauthor: \"Ricardo Accioly\"\nformat:\n  revealjs:\n    width: 1600\n    height: 900 \n    theme: dark\n    slide-number: true\n    css: styles.css\n---\n\n\n## Modelo TFA Exponencial\n\nO conjunto de dados carregados a seguir são de 238 pacientes viciados com heroína.\n\nOs pacientes foram tratados em duas clínicas (1 e 2), além disso foram coletadas informações sobre dose de medicamento ministrado no tratamento e se o paciente já havia sido preso ou não.\n\nOs tempos (`survt`) são em dias e o evento analisado foi o tempo até a saída da clínica (status=1) ou o tempo até o término de estudo (tempo censurado (status=0).\n\n-   id: Identificação do paciente\n-   clinic: clinica em que ocorreu o tratamento\n-   survt: tempo até a saída da clínica (dias)\n-   status: censoring status 0=censored (censurado), 1=evento\n-   prison: 0= se nunca foi preso e 1= se já foi preso\n-   dose: dose do medicamento ministradp\n\n\n## Carregando os dados\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\nlibrary(survival)\nlibrary(readxl)\ndados <- read_xlsx(\"heroina.xlsx\", col_names = TRUE )\nsummary(dados)\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n       id             clinic          status           survt       \n Min.   :  1.00   Min.   :1.000   Min.   :0.0000   Min.   :   2.0  \n 1st Qu.: 65.25   1st Qu.:1.000   1st Qu.:0.0000   1st Qu.: 171.2  \n Median :131.50   Median :1.000   Median :1.0000   Median : 367.5  \n Mean   :134.13   Mean   :1.315   Mean   :0.6303   Mean   : 402.6  \n 3rd Qu.:205.75   3rd Qu.:2.000   3rd Qu.:1.0000   3rd Qu.: 585.5  \n Max.   :266.00   Max.   :2.000   Max.   :1.0000   Max.   :1076.0  \n     prison            dose      \n Min.   :0.0000   Min.   : 20.0  \n 1st Qu.:0.0000   1st Qu.: 50.0  \n Median :0.0000   Median : 60.0  \n Mean   :0.4664   Mean   : 60.4  \n 3rd Qu.:1.0000   3rd Qu.: 70.0  \n Max.   :1.0000   Max.   :110.0  \n```\n:::\n:::\n\n\n## Avaliando presença de dados ausentes\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\nnrow(dados)\nsum(complete.cases(dados))\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 238\n[1] 238\n```\n:::\n:::\n\n\n## Ajuste do Modelo Exponencial\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\nTFAExp <- survreg(Surv(survt, status) ~ clinic + prison + dose,\n                   dist = \"exponential\", \n                   data=dados)\nsummary(TFAExp)\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nsurvreg(formula = Surv(survt, status) ~ clinic + prison + dose, \n    data = dados, dist = \"exponential\")\n               Value Std. Error     z       p\n(Intercept)  3.68434    0.43072  8.55 < 2e-16\nclinic       0.88058    0.21063  4.18 2.9e-05\nprison      -0.25265    0.16489 -1.53    0.13\ndose         0.02892    0.00614  4.71 2.5e-06\n\nScale fixed at 1 \n\nExponential distribution\nLoglik(model)= -1094   Loglik(intercept only)= -1118.9\n\tChisq= 49.91 on 3 degrees of freedom, p= 8.3e-11 \nNumber of Newton-Raphson Iterations: 5 \nn= 238 \n```\n:::\n:::\n\n\nA variável prison é marginalmente significativa considerando um nível de significância de 0,10.\n\n## Modelo Reajustado\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\nTFAExp1 <- survreg(Surv(survt, status) ~ clinic + dose,\n                   dist = \"exponential\", \n                   data=dados)\nsummary(TFAExp1)\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nsurvreg(formula = Surv(survt, status) ~ clinic + dose, data = dados, \n    dist = \"exponential\")\n              Value Std. Error    z       p\n(Intercept) 3.64522    0.42393 8.60 < 2e-16\nclinic      0.85494    0.21014 4.07 4.7e-05\ndose        0.02825    0.00606 4.66 3.2e-06\n\nScale fixed at 1 \n\nExponential distribution\nLoglik(model)= -1095.1   Loglik(intercept only)= -1118.9\n\tChisq= 47.58 on 2 degrees of freedom, p= 4.7e-11 \nNumber of Newton-Raphson Iterations: 5 \nn= 238 \n```\n:::\n:::\n\n\nModelo sem a variável prison.\n\n## Método de Kaplan-Meier\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\najusteKM <- survfit(Surv(survt, status) ~ clinic, data = dados)\nplot(ajusteKM, xlab=\"T(dias)\",ylab=\"S(t)\", lty=1:2, col = 1:2) \nlegend(\"topright\", bty = \"n\", lty = 1:2, col = 1:2,\nlegend = sprintf(\"clinic %d\", 1:2))\n```\n````\n\n::: {.cell-output-display}\n![](Aula06x_files/figure-revealjs/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n\n## Avaliação dos resultados\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\ncoefExp <- coef(TFAExp1)\nexp(coefExp[2])\nexp(coefExp[3])\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n  clinic \n2.351231 \n   dose \n1.02865 \n```\n:::\n:::\n\n\nA mudança da clinica 1 para a clinica 2 teve um fator de aceleração de 2,35, ou seja, na mesma probabilidade o tempo até o evento na clinica 2 é 2,35 vezes maior do que na clínica 1.\n\nA mudança na dose aumentou ligeiramente o tempo até o evento, o fator de aceleração foi de 1,02\n\n## Novos dados\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\nnovosdados <- data.frame(clinic = c(\"1\", \"2\"),\n                         prison = c(\"no\", \"no\"), dose = c(60, 60))\nprevis <- predict(TFAExp1, type = \"quantile\", \n                  newdata = novosdados, p = 0.5)\nprevis\nprevis[2]/previs[1]\nprevis <- predict(TFAExp1, type = \"quantile\", \n                  newdata = novosdados, p = 0.7)\nprevis\nprevis[2]/previs[1]\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n       1        2 \n144.5357 339.8368 \n       2 \n2.351231 \n       1        2 \n251.0535 590.2849 \n       2 \n2.351231 \n```\n:::\n:::\n\n\nVeja que no modelo TFA a proporcionalidade é verificada em diferentes quantis da curva de sobrevivência\n\n",
    "supporting": [
      "Aula06x_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
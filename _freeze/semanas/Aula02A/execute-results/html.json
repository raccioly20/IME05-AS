{
  "hash": "60494e14b9edbc967a15cbf1603c29aa",
  "result": {
    "markdown": "---\ntitle: \"Análise de Sobrevivência\"\nsubtitle: \"Modelos não Paramétricos\"\nauthor: \"Prof. Ricardo Accioly\"\nformat:\n  revealjs:\n    slide-number: true\n    css: styles.css\n    theme: dark\n    footer: \"IME05-12532 - Análise de Sobrevivência\"\n---\n\n\n## Análise de Sobrevivência (1)\n\nNesta apresentação vamos ver passo a passo como obter uma estimativa da curva de sobrevivência através do método de Kaplan-Meier.\n\nVamos inicialmente utilizar o pacote `survival` que é a principal referência em modelos de análise de sobrevivência.\n\n## Análise de Sobrevivência (2)\n\nVamos usar neste exemplo dados de pacientes com leucemia.\n\nO objetivo é verificar se o tratamento proposto, 6MP, tem efeito sobre a doença.\n\nExistem dois grupos de pacientes:\n\n-   21 receberam 6MP que é um medicamento para tratar leucemia\n-   Os outros 21 receberam placebo.\n\n::: {.fragment .highlight-red}\nO evento falha aqui é ocorrer uma recaída na doença.\n:::\n\n## Método Kaplan-Meier {.smaller}\n\n::: panel-tabset\n### Ajuste\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\nlibrary(survival)\ntempo<- c(6,6,6,6,7,9,10,10,11,13,16,17,19,20,22,23,25,32,32,34,35)\nstatus<- c(1,1,1,0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,0,0,0) \ntempo2<- c(1,1,2,2,3,4,4,5,5,8,8,8,8,11,11,12,12,15,17,22,23)\nstatus2<- c(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1) \ntempo2g <- c(tempo,tempo2)\nstatus2g <- c(status,status2)\ngrupos <- c(rep(1,21),rep(2,21))\ndados <- data.frame(tempos=tempo2g, status=status2g, grupos=grupos)\najusteKM <- survfit(Surv(tempos, status) ~ grupos, data=dados)\n```\n````\n:::\n\n\n### Grafico\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\nplot(ajusteKM, xlab=\"T(semanas)\",ylab=\"S(t)\", lty=2:3) \nlegend(\"topright\",c(\"6-MP\",\"Placebo\"), lty = 2:3)\n```\n````\n\n::: {.cell-output-display}\n![](Aula02A_files/figure-revealjs/unnamed-chunk-2-1.png){width=960}\n:::\n:::\n\n:::\n\n## Método Kaplan-Meier {.smaller}\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\nsummary(ajusteKM)\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\nCall: survfit(formula = Surv(tempos, status) ~ grupos, data = dados)\n\n                grupos=1 \n time n.risk n.event survival std.err lower 95% CI upper 95% CI\n    6     21       3    0.857  0.0764        0.720        1.000\n    7     17       1    0.807  0.0869        0.653        0.996\n   10     15       1    0.753  0.0963        0.586        0.968\n   13     12       1    0.690  0.1068        0.510        0.935\n   16     11       1    0.627  0.1141        0.439        0.896\n   22      7       1    0.538  0.1282        0.337        0.858\n   23      6       1    0.448  0.1346        0.249        0.807\n\n                grupos=2 \n time n.risk n.event survival std.err lower 95% CI upper 95% CI\n    1     21       2   0.9048  0.0641      0.78754        1.000\n    2     19       2   0.8095  0.0857      0.65785        0.996\n    3     17       1   0.7619  0.0929      0.59988        0.968\n    4     16       2   0.6667  0.1029      0.49268        0.902\n    5     14       2   0.5714  0.1080      0.39455        0.828\n    8     12       4   0.3810  0.1060      0.22085        0.657\n   11      8       2   0.2857  0.0986      0.14529        0.562\n   12      6       2   0.1905  0.0857      0.07887        0.460\n   15      4       1   0.1429  0.0764      0.05011        0.407\n   17      3       1   0.0952  0.0641      0.02549        0.356\n   22      2       1   0.0476  0.0465      0.00703        0.322\n   23      1       1   0.0000     NaN           NA           NA\n```\n:::\n:::\n\n\n## Método de Nelson-Aalen\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntempo<- c(6,6,6,6,7,9,10,10,11,13,16,17,19,20,22,23,25,32,32,34,35)\nstatus<- c(1,1,1,0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,0,0,0) \ntempo2<- c(1,1,2,2,3,4,4,5,5,8,8,8,8,11,11,12,12,15,17,22,23)\nstatus2<- c(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1) \ntempo2g <- c(tempo,tempo2)\nstatus2g <- c(status,status2)\ngrupos <- c(rep(1,21),rep(2,21))\ndados <- data.frame(tempos=tempo2g, status=status2g, grupos=grupos)\najusteNA <- survfit(Surv(tempos, status)~grupos, data = dados, stype=2, ctype=1 )\n```\n:::\n\n\n## Grafico\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\nplot(ajusteNA, xlab=\"T(semanas)\",ylab=\"S(t)\", lty=2:3) \nlegend(\"topright\",c(\"6-MP\",\"Placebo\"), lty = 2:3)\n```\n````\n\n::: {.cell-output-display}\n![](Aula02A_files/figure-revealjs/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n\n## Método Nelson-Aalen {.smaller}\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\nsummary(ajusteNA)\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\nCall: survfit(formula = Surv(tempos, status) ~ grupos, data = dados, \n    stype = 2, ctype = 1)\n\n                grupos=1 \n time n.risk n.event survival std.err lower 95% CI upper 95% CI\n    6     21       3    0.867  0.0715        0.737        1.000\n    7     17       1    0.817  0.0828        0.670        0.997\n   10     15       1    0.765  0.0927        0.603        0.970\n   13     12       1    0.704  0.1035        0.527        0.939\n   16     11       1    0.642  0.1111        0.458        0.902\n   22      7       1    0.557  0.1249        0.359        0.864\n   23      6       1    0.471  0.1317        0.273        0.815\n\n                grupos=2 \n time n.risk n.event survival std.err lower 95% CI upper 95% CI\n    1     21       2   0.9092  0.0612      0.79674        1.000\n    2     19       2   0.8183  0.0821      0.67218        0.996\n    3     17       1   0.7716  0.0898      0.61425        0.969\n    4     16       2   0.6809  0.0995      0.51135        0.907\n    5     14       2   0.5903  0.1048      0.41673        0.836\n    8     12       4   0.4229  0.1030      0.26239        0.682\n   11      8       2   0.3294  0.0991      0.18261        0.594\n   12      6       2   0.2360  0.0902      0.11157        0.499\n   15      4       1   0.1838  0.0840      0.07509        0.450\n   17      3       1   0.1317  0.0745      0.04348        0.399\n   22      2       1   0.0799  0.0603      0.01820        0.351\n   23      1       1   0.0294  0.0368      0.00252        0.342\n```\n:::\n:::\n\n\n## IC através da Normal {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\najusteKM <- survfit(Surv(tempos, status) ~ grupos, data=dados, conf.type=\"plain\")\nsummary(ajusteKM)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCall: survfit(formula = Surv(tempos, status) ~ grupos, data = dados, \n    conf.type = \"plain\")\n\n                grupos=1 \n time n.risk n.event survival std.err lower 95% CI upper 95% CI\n    6     21       3    0.857  0.0764        0.707        1.000\n    7     17       1    0.807  0.0869        0.636        0.977\n   10     15       1    0.753  0.0963        0.564        0.942\n   13     12       1    0.690  0.1068        0.481        0.900\n   16     11       1    0.627  0.1141        0.404        0.851\n   22      7       1    0.538  0.1282        0.286        0.789\n   23      6       1    0.448  0.1346        0.184        0.712\n\n                grupos=2 \n time n.risk n.event survival std.err lower 95% CI upper 95% CI\n    1     21       2   0.9048  0.0641       0.7792        1.000\n    2     19       2   0.8095  0.0857       0.6416        0.977\n    3     17       1   0.7619  0.0929       0.5797        0.944\n    4     16       2   0.6667  0.1029       0.4650        0.868\n    5     14       2   0.5714  0.1080       0.3598        0.783\n    8     12       4   0.3810  0.1060       0.1733        0.589\n   11      8       2   0.2857  0.0986       0.0925        0.479\n   12      6       2   0.1905  0.0857       0.0225        0.358\n   15      4       1   0.1429  0.0764       0.0000        0.293\n   17      3       1   0.0952  0.0641       0.0000        0.221\n   22      2       1   0.0476  0.0465       0.0000        0.139\n   23      1       1   0.0000     NaN          NaN          NaN\n```\n:::\n:::\n\n\n## IC usando a transformação log-log {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\najusteKM <- survfit(Surv(tempos, status) ~ grupos, data=dados, conf.type=\"log-log\")\nsummary(ajusteKM)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCall: survfit(formula = Surv(tempos, status) ~ grupos, data = dados, \n    conf.type = \"log-log\")\n\n                grupos=1 \n time n.risk n.event survival std.err lower 95% CI upper 95% CI\n    6     21       3    0.857  0.0764        0.620        0.952\n    7     17       1    0.807  0.0869        0.563        0.923\n   10     15       1    0.753  0.0963        0.503        0.889\n   13     12       1    0.690  0.1068        0.432        0.849\n   16     11       1    0.627  0.1141        0.368        0.805\n   22      7       1    0.538  0.1282        0.268        0.747\n   23      6       1    0.448  0.1346        0.188        0.680\n\n                grupos=2 \n time n.risk n.event survival std.err lower 95% CI upper 95% CI\n    1     21       2   0.9048  0.0641      0.67005        0.975\n    2     19       2   0.8095  0.0857      0.56891        0.924\n    3     17       1   0.7619  0.0929      0.51939        0.893\n    4     16       2   0.6667  0.1029      0.42535        0.825\n    5     14       2   0.5714  0.1080      0.33798        0.749\n    8     12       4   0.3810  0.1060      0.18307        0.578\n   11      8       2   0.2857  0.0986      0.11656        0.482\n   12      6       2   0.1905  0.0857      0.05948        0.377\n   15      4       1   0.1429  0.0764      0.03566        0.321\n   17      3       1   0.0952  0.0641      0.01626        0.261\n   22      2       1   0.0476  0.0465      0.00332        0.197\n   23      1       1   0.0000     NaN           NA           NA\n```\n:::\n:::\n",
    "supporting": [
      "Aula02A_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
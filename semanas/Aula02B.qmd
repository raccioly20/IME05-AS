---
title: "Análise de Sobrevivência"
subtitle: "Modelos não Paramétricos"
author: "Prof. Ricardo Accioly"
format:
  revealjs:
    slide-number: true
    css: styles.css
    theme: dark
    footer: "IME05-12532 - Análise de Sobrevivência"
---

## Análise de Sobrevivência (1)

Nesta apresentação vamos ver passo a passo como obter uma estimativa da curva de sobrevivência através do método de Kaplan-Meier.

Vamos inicialmente utilizar o pacote `survival` que é a principal referência em modelos de análise de sobrevivência.

## Análise de Sobrevivência (2)

Vamos usar neste exemplo dados de pacientes com leucemia.

O objetivo é verificar se o tratamento proposto, 6MP, tem efeito sobre a doença.

Existem dois grupos de pacientes:

-   21 receberam 6MP que é um medicamento para tratar leucemia
-   Os outros 21 receberam placebo.

::: {.fragment .highlight-red}
O evento falha aqui é ocorrer uma recaída na doença.
:::

## Método Kaplan-Meier {.smaller}

::: panel-tabset
### Ajuste

```{r }
#| echo: fenced
library(survival)
tempo<- c(6,6,6,6,7,9,10,10,11,13,16,17,19,20,22,23,25,32,32,34,35)
status<- c(1,1,1,0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,0,0,0) 
tempo2<- c(1,1,2,2,3,4,4,5,5,8,8,8,8,11,11,12,12,15,17,22,23)
status2<- c(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1) 
tempo2g <- c(tempo,tempo2)
status2g <- c(status,status2)
grupos <- c(rep(1,21),rep(2,21))
dados <- data.frame(tempos=tempo2g, status=status2g, grupos=grupos)
ajusteKM <- survfit(Surv(tempos, status) ~ grupos, data=dados)
```

### Grafico

```{r}
#| echo: fenced
plot(ajusteKM, xlab="T(semanas)",ylab="S(t)", lty=2:3) 
legend("topright",c("6-MP","Placebo"), lty = 2:3)
```
:::

## Método Kaplan-Meier {.smaller}

```{r}
#| echo: fenced
summary(ajusteKM)
```

## Teste do log-rank

```{r}
#| echo: fenced
survdiff(Surv(tempos, status) ~ grupos, data=dados)
```

## Teste do log-rank usando pesos

Quando usamo rho=0, o teste é identico ao log-rank padrão

```{r}
#| echo: fenced
# rho=0 é o teste de log-rank
survdiff(Surv(tempos, status) ~ grupos, rho=0, data=dados)
```

## Usando pesos de Peto&Peto (HF)

Quando usamo rho=1, ele se torna do teste de log-rank usando os pesos de Peto&Peto

```{r}
#| echo: fenced
# rho=1 é o teste de Harrigton-Fleming
survdiff(Surv(tempos, status) ~ grupos, rho=1, data=dados)
```

## Teste do Log-rank para mais de 2 grupos {.smaller}

Vamos usar neste exemplo os dados de um estudo experimental com camundongos conduzido no Centro de Pesquisas René Rachou, FioCruz, MG.

44 camundongos foram infectados pela malaria (Plasmodium berguei) e aleatoriamente alocados em três grupos:

`Grupo 1`: Imunizados 30 dias antes da infecção pela malária. Foram infetados também por esquistossomose.

`Grupo 2`: Controle (Somente infectado pela malária)

`Grupo 3`: Infectado pela malária e ela esquistossomose.

## Teste do Log-rank para mais de 2 grupos

A resposta foi o tempo decorrido desde a infecção pela malária até a morte do camundongo. O tempo foi medido em dias e o estudo foi acompanhado por 30 dias.

Vamos adotar um `nível de significância` de 0,05 para avaliar a diferença entre as curvas, ou seja, se a estatística de `log-rank` tiver um valor menor que 0,05, vamos rejeitar a hipótese nula.

## Método Kaplan-Meier

::: panel-tabset
### Ajuste

```{r}
#| echo: fenced
tempos <- c(7,8,8,8,8,12,12,17,18,22,30,30,30,30,30,30,8,8,9,
10,10,14,15,15,18,19,21,22,22,23,25,8,8,8,8,8,8,
9,10,10,10,11,17,19)
status <- c(rep(1,10), rep(0,6), rep(1,15), rep(1,13))
grupos <- c(rep(1,16), rep(2,15), rep(3,13))
dados2 <- data.frame(tempos, status, grupos)
ajusteKM2<- survfit(Surv(tempos, status) ~ grupos, data = dados2)
```

### Grafico

```{r}
plot(ajusteKM2, xlab="T(dias)",ylab="S(t)", lty=1:3) 
legend("topright",c("G 1","G 2", "G 3"), lty = 1:3)
```
:::

## Teste do log-rank

```{r}
#| echo: true
survdiff(Surv(tempos, status) ~ grupos, data = dados2,  rho=0)
```

## Obtendo os resultados de outra forma

```{r}
#| echo: true
teste_lr <- survdiff(Surv(tempos, status) ~ grupos, data = dados2,  rho=0)
w <- teste_lr$obs[1:2] - teste_lr$exp[1:2]
V <- teste_lr$var[1:2,1:2]
t(w) %*% solve(V) %*% w
```

## Avaliação {.smaller}

Como a hipótese nula foi rejeitada precisamos avaliar se todas as curvas de sobrevivência são diferentes. Para isto vamos fazer comparações, duas a duas, utilizando o método de `Bonferroni`.

Como existem três grupos, são três as comparações duas a duas.

O nível de significância a ser adotado nestas comparações é de $\alpha$ = 0,05/3 = 0,017. Isto vai garantir uma conclusão geral ao nível máximo de 0,05.

## Grupos 1 e 2

```{r}
#| echo: true
survdiff(Surv(tempos, status) ~ grupos, data = subset(dados2, grupos!=3),  rho=0)
```

## Grupos 1 e 3

```{r}
#| echo: true
survdiff(Surv(tempos, status) ~ grupos, data = subset(dados2, grupos!=2),  rho=0)
```

## Grupos 2 e 3

```{r}
#| echo: true
survdiff(Surv(tempos, status) ~ grupos, data = subset(dados2, grupos!=1),  rho=0)
```

## Curva de Sobrevivência estratificada {.smaller}

Neste exemplo temos 2 tratamentos, mas queremos controlar os resultados considerando uma variável categórica (sexo).

O evento estudado é o tempo até a `recaída` de leucemia.

O conjunto de dados tem os seguintes informação:

-   tempo (semanas)
-   status (0 = censura e 1 = falha)
-   sexo (0 = mulher e 1 = homem)
-   logwbc = log do número de células brancas
-   Rx (0 = Novo tratamento e 1 = Placebo)

Vamos ver como isto pode ser feito na função survfit.

## Curva de Sobrevivência estratificada

::: panel-tabset
### Ajuste

```{r}
#| echo: fenced
library(readxl)
dados_a <- read_xlsx("anderson.xlsx", col_names=T)
ajusteKM_S <- survfit(Surv(tempo, status) ~ Rx + strata(sexo), data = dados_a)
```

### Grafico

```{r}
plot(ajusteKM_S, xlab="T(semanas)",ylab="S(t)", lty=1:4) 
legend("topright",c("Rx=0 e Sexo=M","Rx=0 e Sexo=F", "Rx=1 e Sexo=M", "Rx=1 e Sexo=F"), lty = 1:4)
```
:::


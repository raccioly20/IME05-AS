---
title: "Análise de Sobrevivência"
subtitle: "Modelos Paramétricos"
author: "Ricardo Accioly"
format:
  revealjs:
    slide-number: true
    css: styles.css
    theme: dark
    footer: "IME05-12532 - Análise de Sobrevivência"
---

## Modelos Paramétricos

Nesta apresentação vamos ver passo a passo como obter a função taxa de falhas e de sobrevivência para alguns modelos de probabilidade.

Aqui vamos utilizar as funções existentes no pacote `stats` que vem com a instalação padrão do R.

## Modelos Paramétricos - Exponencial  {.smaller}

```{r}
#| echo: true
#| output-location: column
expHaz <- function(x, rate) { 
  dexp(x, rate=rate)/
    pexp(x, rate=rate, lower.tail=F)
}
curve(expHaz(x, rate=0.5), from=0, to=50,
      ylab="h(t)", xlab="Tempo", 
      col="red", ylim=c(0,1))
curve(expHaz(x, rate=0.3), from=0, to=50, 
      ylab="h(t)", xlab="Tempo",
      col="blue", add = T)
curve(expHaz(x, rate=0.1), from=0, to=50,
      ylab="h(t)", xlab="Tempo", 
      col="black", add=T)
legend("topright", 
       legend = c(expression(paste(alfa, " = ", 2)),
                  expression(paste(alfa, " = ", 3)),
                  expression(paste(alfa, " = ", 10))),
                   lty=1, col = c("red","blue","black"))
```

## Taxa de Falhas - Exponencial  

```{r}
#| echo: false
#| fig-width: 10
#| fig-height: 4.5
expHaz <- function(x, rate) { 
  dexp(x, rate=rate)/
    pexp(x, rate=rate, lower.tail=F)
}
curve(expHaz(x, rate=0.5), from=0, to=50,
      ylab="h(t)", xlab="Tempo", 
      col="red", ylim=c(0,1))
curve(expHaz(x, rate=0.3), from=0, to=50, 
      ylab="h(t)", xlab="Tempo",
      col="blue", add = T)
curve(expHaz(x, rate=0.1), from=0, to=50,
      ylab="h(t)", xlab="Tempo", 
      col="black", add=T)
legend("topright", 
       legend = c(expression(paste(alfa, " = ", 2)),
                  expression(paste(alfa, " = ", 3)),
                  expression(paste(alfa, " = ", 10))),
                   lty=1, col = c("red","blue","black"))
```

## Modelos Paramétricos - Exponencial {.smaller}

```{r}
#| echo: true
#| output-location: column
expSurv <- function(x, rate) { 
  pexp(x, rate=rate, lower.tail=F)
}
curve(expSurv(x, rate=0.5), from=0, to=50,
      ylab="S(t)", xlab="Tempo", col="red")
curve(expSurv(x, rate=0.3), from=0, to=50,
      ylab="S(t)", xlab="Tempo", col="blue", add=T)
curve(expSurv(x, rate=0.1), from=0, to=50,
      ylab="S(t)", xlab="Tempo", col="black", add=T)
legend("topright", 
       legend = c(expression(paste(alfa, " = ", 2)),
                  expression(paste(alfa, " = ", 3)),
                  expression(paste(alfa, " = ", 10))),
       lty=1, col = c("red","blue","black"))
```

## Curva de Sobrevivência - Exponencial

```{r}
#| echo: false
#| output-location: column
expSurv <- function(x, rate) { 
  pexp(x, rate=rate, lower.tail=F)
}
curve(expSurv(x, rate=0.5), from=0, to=50,
      ylab="S(t)", xlab="Tempo", col="red")
curve(expSurv(x, rate=0.3), from=0, to=50,
      ylab="S(t)", xlab="Tempo", col="blue", add=T)
curve(expSurv(x, rate=0.1), from=0, to=50,
      ylab="S(t)", xlab="Tempo", col="black", add=T)
legend("topright", 
       legend = c(expression(paste(alfa, " = ", 2)),
                  expression(paste(alfa, " = ", 3)),
                  expression(paste(alfa, " = ", 10))),
       lty=1, col = c("red","blue","black"))
```

## Modelos Paramétricos - Weibull {.smaller}

```{r}
#| echo: true
#| fig-width: 10
#| fig-height: 4.5
weibHaz <- function(x, shape, scale) { 
  dweibull(x, shape=shape, scale=scale)/
  pweibull(x, shape=shape, scale=scale,
           lower.tail=F)
}
curve(weibHaz(x, shape=1.5, scale=1), 
      from=0, to=2,
      ylab="h(t)", xlab="Tempo", col="red")
curve(weibHaz(x, shape=1, scale=1), 
      from=0, to=2, 
      ylab="h(t)", xlab="Tempo", col="blue", 
      add = T)
curve(weibHaz(x, shape=0.75, scale=1), 
      from=0, to=2,
      ylab="h(t)", xlab="Tempo", col="black", 
      add=T)
legend("topright", 
   legend = c(expression(paste(beta, " = ", 1.5," ",
                                   alfa, " = ", 1)),
              expression(paste(beta, " = ", 1," ",
                                    alfa, " = ", 1)),
              expression(paste(beta, " = ", 0.75," ",
                                    alfa, " = ", 1))),
       lty=1, col = c("red","blue","black"))
```

## Taxa de Falhas - Weibull

```{r}
#| echo: false
#| fig-width: 10
#| fig-height: 4.5
weibHaz <- function(x, shape, scale) { 
  dweibull(x, shape=shape, scale=scale)/
  pweibull(x, shape=shape, scale=scale,
           lower.tail=F)
}
curve(weibHaz(x, shape=1.5, scale=1), 
      from=0, to=2,
      ylab="h(t)", xlab="Tempo", col="red")
curve(weibHaz(x, shape=1, scale=1), 
      from=0, to=2, 
      ylab="h(t)", xlab="Tempo", col="blue", 
      add = T)
curve(weibHaz(x, shape=0.75, scale=1), 
      from=0, to=2,
      ylab="h(t)", xlab="Tempo", col="black", 
      add=T)
legend("topright", 
   legend = c(expression(paste(beta, " = ", 1.5," ",
                                   alfa, " = ", 1)),
              expression(paste(beta, " = ", 1," ",
                                    alfa, " = ", 1)),
              expression(paste(beta, " = ", 0.75," ",
                                    alfa, " = ", 1))),
       lty=1, col = c("red","blue","black"))
```

## Modelos Paramétricos - Weibull {.smaller}

```{r}
#| echo: true
#| fig-width: 10
#| fig-height: 4.5
weibSurv <- function(x, shape, scale) {
  pweibull(x, shape=shape, scale=scale,
           lower.tail=F)
}
curve(weibSurv(x, shape=1.5, scale=1), from=0, to=2,
      ylab="S(t)", xlab="Tempo", col="red")
curve(weibSurv(x, shape=1, scale=1), from=0, to=2,
      ylab="S(t)", xlab="Tempo", col="blue", add=T)
curve(weibSurv(x, shape=0.75, scale=1), from=0, to=2,
      ylab="S(t)", xlab="Tempo", col="black", add=T)
legend("topright", 
       legend = c(expression(paste(beta, " = ", 1.5," ",
                                       alfa, " = ", 1)),
                  expression(paste(beta, " = ", 1," ",
                                       alfa, " = ", 1)),
         expression(paste(beta, " = ", 0.75," ",
                                      alfa, " = ", 1))),
       lty=1, col = c("red","blue","black"))
```

## Curva de Sobrevivência - Weibull

```{r}
#| echo: false
#| fig-width: 10
#| fig-height: 4.5
weibSurv <- function(x, shape, scale) {
  pweibull(x, shape=shape, scale=scale,
           lower.tail=F)
}
curve(weibSurv(x, shape=1.5, scale=1), from=0, to=2,
      ylab="S(t)", xlab="Tempo", col="red")
curve(weibSurv(x, shape=1, scale=1), from=0, to=2,
      ylab="S(t)", xlab="Tempo", col="blue", add=T)
curve(weibSurv(x, shape=0.75, scale=1), from=0, to=2,
      ylab="S(t)", xlab="Tempo", col="black", add=T)
legend("topright", 
       legend = c(expression(paste(beta, " = ", 1.5," ",
                                       alfa, " = ", 1)),                                    expression(paste(beta, " = ", 1," ",
                                       alfa, " = ", 1)),
         expression(paste(beta, " = ", 0.75," ",
                                      alfa, " = ", 1))),
       lty=1, col = c("red","blue","black"))
```

## Modelos Paramétricos - Lognormal  {.smaller}

```{r}
#| echo: true
#| fig-width: 10
#| fig-height: 4.5
logHaz <- function(x, meanlog, sdlog) {
  dlnorm(x, meanlog=meanlog, sdlog=sdlog)/
  plnorm(x, meanlog=meanlog, sdlog=sdlog, 
         lower.tail=F)
}
curve(logHaz(x, meanlog=0, sdlog=0.5), from=0, to=log(80),
      ylab="h(t)", xlab="log(Tempo)", 
      col="red", ylim=c(0,3.0))
curve(logHaz(x, meanlog=1, sdlog=0.7), from=0, to=log(80),
      ylab="h(t)", xlab="Log(Tempo)", 
      col="blue", add=T)
curve(logHaz(x, meanlog=1, sdlog=1.0), from=0, to=log(80),
      ylab="h(t)", xlab="Log(Tempo)", 
      col="black", add=T)
legend("topright", c("lnorm(0,0.5)", "lnorm(1,0.7)", 
                     "lnorm(1,1)"), lty=1, 
       col = c("red","blue","black"))
```

## Taxa de Falhas - Lognormal

```{r}
#| echo: false
#| fig-width: 10
#| fig-height: 4.5
logHaz <- function(x, meanlog, sdlog) {
  dlnorm(x, meanlog=meanlog, sdlog=sdlog)/
  plnorm(x, meanlog=meanlog, sdlog=sdlog, 
         lower.tail=F)
}
curve(logHaz(x, meanlog=0, sdlog=0.5), from=0, to=log(80),
      ylab="h(t)", xlab="log(Tempo)", 
      col="red", ylim=c(0,3.0))
curve(logHaz(x, meanlog=1, sdlog=0.7), from=0, to=log(80),
      ylab="h(t)", xlab="Log(Tempo)", 
      col="blue", add=T)
curve(logHaz(x, meanlog=1, sdlog=1.0), from=0, to=log(80),
      ylab="h(t)", xlab="Log(Tempo)", 
      col="black", add=T)
legend("topright", c("lnorm(0,0.5)", "lnorm(1,0.7)", 
                     "lnorm(1,1)"), lty=1, 
       col = c("red","blue","black"))
```

## Modelos Paramétricos - Lognormal {.smaller}

```{r}
#| echo: true
#| fig-width: 10
#| fig-height: 4.5
logSurv <- function(x, meanlog, sdlog) {
  plnorm(x, meanlog=meanlog, sdlog=sdlog, 
         lower.tail=F)
}
curve(logSurv(x, meanlog=0, sdlog=0.5), 
      from=0, to=log(80),
      ylab="S(t)", xlab="Log(Tempo)",
      col="red")
curve(logSurv(x, meanlog=1, sdlog=0.7), 
      from=0, to=log(80),
      ylab="S(t)", xlab="Log(Tempo)", 
      col="blue", add=T)
curve(logSurv(x, meanlog=1, sdlog=1.0),
      from=0, to=log(80),
      ylab="S(t)", xlab="Log(Tempo)",
      col="black", add=T)
legend("topright", c("lnorm(0,0.5)", 
                     "lnorm(1,0.7)", 
                     "lnorm(1,1)"),
       lty=1, col = c("red","blue","black"))
```

## Curva de Sobrevivência - Lognormal

```{r}
#| echo: false
#| fig-width: 10
#| fig-height: 4.5
logSurv <- function(x, meanlog, sdlog) {
  plnorm(x, meanlog=meanlog, sdlog=sdlog, 
         lower.tail=F)
}
curve(logSurv(x, meanlog=0, sdlog=0.5), 
      from=0, to=log(80),
      ylab="S(t)", xlab="Log(Tempo)",
      col="red")
curve(logSurv(x, meanlog=1, sdlog=0.7), 
      from=0, to=log(80),
      ylab="S(t)", xlab="Log(Tempo)", 
      col="blue", add=T)
curve(logSurv(x, meanlog=1, sdlog=1.0),
      from=0, to=log(80),
      ylab="S(t)", xlab="Log(Tempo)",
      col="black", add=T)
legend("topright", c("lnorm(0,0.5)", 
                     "lnorm(1,0.7)", 
                     "lnorm(1,1)"),
       lty=1, col = c("red","blue","black"))
```

## Modelos Paramétricos - Loglogistico {.smaller}

```{r}
#| echo: true
#| fig-width: 10
#| fig-height: 4.5

llogisHaz <- function(x, alfa, beta) {
  haz <- beta/alfa*(x/alfa)^(beta-1)/(1+(x/alfa)^beta)  
}
curve(llogisHaz(x, alfa=1, beta=0.5), from=0, to=log(80),
      ylab="h(t)", xlab="Log(Tempo)", col="red")
curve(llogisHaz(x, alfa=1., beta=1), from=0, to=log(80),
      ylab="h(t)", xlab="Log(Tempo)", col="blue", add=T)
curve(llogisHaz(x, alfa=1., beta=3), from=0, to=log(80),
      ylab="h(t)", xlab="Log(Tempo)", col="black", add=T)
legend("topright", c("llogis(1, 0.5)", "llogis(1,1)",
                     "llogis(1,3)"),
       lty=1, col = c("red","blue","black"))
```

## Taxa de Falhas - Loglogistico

```{r}
#| echo: false
#| fig-width: 10
#| fig-height: 4.5

llogisHaz <- function(x, alfa, beta) {
  haz <- beta/alfa*(x/alfa)^(beta-1)/(1+(x/alfa)^beta)  
}
curve(llogisHaz(x, alfa=1, beta=0.5), from=0, to=log(80),
      ylab="h(t)", xlab="Log(Tempo)", col="red")
curve(llogisHaz(x, alfa=1., beta=1), from=0, to=log(80),
      ylab="h(t)", xlab="Log(Tempo)", col="blue", add=T)
curve(llogisHaz(x, alfa=1., beta=3), from=0, to=log(80),
      ylab="h(t)", xlab="Log(Tempo)", col="black", add=T)
legend("topright", c("llogis(1, 0.5)", "llogis(1,1)",
                     "llogis(1,3)"),
       lty=1, col = c("red","blue","black"))
```

## Modelos Paramétricos - Loglogistico {.smaller}

```{r}
#| echo: true
#| fig-width: 10
#| fig-height: 4.5

llogisSurv <- function(x, alfa, beta) {
          surv <- 1/(1+(x/alfa)^beta)  
}
curve(llogisSurv(x, alfa=1, beta=0.5), 
      from=0, to=log(80),
      ylab="S(t)", xlab="Log(Tempo)", 
      col="red", ylim=c(0,1))
curve(llogisSurv(x, alfa=1, beta=1), 
      from=0, to=log(80),
      ylab="S(t)", xlab="Log(Tempo)", 
      col="blue", add=T)
curve(llogisSurv(x, alfa=1, beta=3), 
      from=0, to=log(80),
      ylab="S(t)", xlab="Log(Tempo)", 
      col="black", add=T)
legend("topright", c("llogis(1, 0.5)", 
                     "llogis(1,1)", 
                     "llogis(1,3)"),
       lty=1, col = c("red","blue","black"))
```

## Curva de Sobrevivência - Loglogistico

```{r}
#| echo: false
#| fig-width: 10
#| fig-height: 4.5

llogisSurv <- function(x, alfa, beta) {
          surv <- 1/(1+(x/alfa)^beta)  
}
curve(llogisSurv(x, alfa=1, beta=0.5), 
      from=0, to=log(80),
      ylab="S(t)", xlab="Log(Tempo)", 
      col="red", ylim=c(0,1))
curve(llogisSurv(x, alfa=1, beta=1), 
      from=0, to=log(80),
      ylab="S(t)", xlab="Log(Tempo)", 
      col="blue", add=T)
curve(llogisSurv(x, alfa=1, beta=3), 
      from=0, to=log(80),
      ylab="S(t)", xlab="Log(Tempo)", 
      col="black", add=T)
legend("topright", c("llogis(1, 0.5)", 
                     "llogis(1,1)", 
                     "llogis(1,3)"),
       lty=1, col = c("red","blue","black"))
```
